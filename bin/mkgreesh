#!/usr/bin/python
# quick script to get the gree machines from GREE's gdoc spreadsheet
# and create a dsh groups file
# vi: sw=2 ts=2
# +cru / Oct 2014

import getpass
import gspread
import re
import sys

class TDSheet(object):
  __sheet = None
  __rawhosts = None
  __hosts = None
  __products = None
  __dbs = None
  __maxrow = None
  __TITLE = "[Treasure Data] Metric Insights Instances"

  def __init__(self, user,passwd):
    self.client = gspread.login(user,passwd)

  @property
  def sheet(self):
    if not self.__sheet:
      self.__sheet = self.client.open(self.__TITLE).sheet1
    return self.__sheet

  @property
  def maxrow(self):
    if not self.__maxrow:
      try:
        n = [ i for i,c in enumerate(self.sheet.col_values(4)) if 'Finished to use MI' == c ][0]
        self.__maxrow = n
      except Exception, e:
        raise RuntimeError("Could not determine end of spreadsheet. Fix code to match spreadsheet!")
    return self.__maxrow

  def _getcol(self, n):
    names = self.sheet.col_values(n)
    return [ names[n] for n,h in self.__rawhosts ]

  @property
  def products(self):
    if not self.__products:
      self.__products = self._getcol(5)
    return self.__products

  @property
  def dbs(self):
    if not self.__dbs:
      self.__dbs = self._getcol(7)
    return self.__dbs

  @property
  def hosts(self):
    if not self.__hosts:
      self.__rawhosts = [ [i,re.sub(r'^https?://([^/]+)/?$',r'\1',c)] for i,c in enumerate(self.sheet.col_values(9)) if i<=self.maxrow and c and re.search(r'https://.*',c) ]
      self.__hosts = [ h for i,h in self.__rawhosts ]
    return self.__hosts

def main():
  user = getpass.getuser() + '@metricinsights.com'
  pw = getpass.getpass('Google password for %s: ' % user)
  s = TDSheet(user,pw)
  print "# this dsh group auto-generated by cru's amazing mkgreesh\n"
  for i,h in enumerate(s.hosts):
    n = s.dbs[i]
    if n == "any":
      n = s.products[i]
    print "# %s" % n
    print h

if __name__ == '__main__':
  sys.exit(main())
